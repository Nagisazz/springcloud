<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vivolvle.producer.mapper.MapStudentMapper" >
  <resultMap id="BaseResultMap" type="com.vivolvle.producer.model.MapStudent" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="map_id" property="mapId" jdbcType="BIGINT" />
    <result column="institute_id" property="instituteId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="pass_sum" property="passSum" jdbcType="TINYINT" />
    <result column="learn_sum" property="learnSum" jdbcType="INTEGER" />
    <result column="point_sum" property="pointSum" jdbcType="INTEGER" />
    <result column="latest_course" property="latestCourse" jdbcType="VARCHAR" />
    <result column="create_id" property="createId" jdbcType="BIGINT" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, map_id, institute_id, user_id, pass_sum, learn_sum, point_sum, latest_course, 
    create_id, create_date, update_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from `map_student`
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from `map_student`
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.vivolvle.producer.model.MapStudent" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `map_student` (map_id, institute_id, user_id, 
      pass_sum, learn_sum, point_sum, 
      latest_course, create_id, create_date, 
      update_date)
    values (#{mapId,jdbcType=BIGINT}, #{instituteId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, 
      #{passSum,jdbcType=TINYINT}, #{learnSum,jdbcType=INTEGER}, #{pointSum,jdbcType=INTEGER}, 
      #{latestCourse,jdbcType=VARCHAR}, #{createId,jdbcType=BIGINT}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.vivolvle.producer.model.MapStudent" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `map_student`
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="mapId != null" >
        map_id,
      </if>
      <if test="instituteId != null" >
        institute_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="passSum != null" >
        pass_sum,
      </if>
      <if test="learnSum != null" >
        learn_sum,
      </if>
      <if test="pointSum != null" >
        point_sum,
      </if>
      <if test="latestCourse != null" >
        latest_course,
      </if>
      <if test="createId != null" >
        create_id,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="mapId != null" >
        #{mapId,jdbcType=BIGINT},
      </if>
      <if test="instituteId != null" >
        #{instituteId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="passSum != null" >
        #{passSum,jdbcType=TINYINT},
      </if>
      <if test="learnSum != null" >
        #{learnSum,jdbcType=INTEGER},
      </if>
      <if test="pointSum != null" >
        #{pointSum,jdbcType=INTEGER},
      </if>
      <if test="latestCourse != null" >
        #{latestCourse,jdbcType=VARCHAR},
      </if>
      <if test="createId != null" >
        #{createId,jdbcType=BIGINT},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.vivolvle.producer.model.MapStudent" >
    update `map_student`
    <set >
      <if test="mapId != null" >
        map_id = #{mapId,jdbcType=BIGINT},
      </if>
      <if test="instituteId != null" >
        institute_id = #{instituteId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="passSum != null" >
        pass_sum = #{passSum,jdbcType=TINYINT},
      </if>
      <if test="learnSum != null" >
        learn_sum = #{learnSum,jdbcType=INTEGER},
      </if>
      <if test="pointSum != null" >
        point_sum = #{pointSum,jdbcType=INTEGER},
      </if>
      <if test="latestCourse != null" >
        latest_course = #{latestCourse,jdbcType=VARCHAR},
      </if>
      <if test="createId != null" >
        create_id = #{createId,jdbcType=BIGINT},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.vivolvle.producer.model.MapStudent" >
    update `map_student`
    set map_id = #{mapId,jdbcType=BIGINT},
      institute_id = #{instituteId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      pass_sum = #{passSum,jdbcType=TINYINT},
      learn_sum = #{learnSum,jdbcType=INTEGER},
      point_sum = #{pointSum,jdbcType=INTEGER},
      latest_course = #{latestCourse,jdbcType=VARCHAR},
      create_id = #{createId,jdbcType=BIGINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>