<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.vivolvle.producer.mapper.ResourceMapper" >
  <resultMap id="BaseResultMap" type="com.vivolvle.producer.model.Resource" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="file_name" property="fileName" jdbcType="VARCHAR" />
    <result column="file_size" property="fileSize" jdbcType="BIGINT" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="file_type" property="fileType" jdbcType="TINYINT" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, file_name, file_size, url, file_type, `status`, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from `resource`
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from `resource`
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.vivolvle.producer.model.Resource" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `resource` (file_name, file_size, url, 
      file_type, `status`, create_time
      )
    values (#{fileName,jdbcType=VARCHAR}, #{fileSize,jdbcType=BIGINT}, #{url,jdbcType=VARCHAR}, 
      #{fileType,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.vivolvle.producer.model.Resource" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into `resource`
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fileName != null" >
        file_name,
      </if>
      <if test="fileSize != null" >
        file_size,
      </if>
      <if test="url != null" >
        url,
      </if>
      <if test="fileType != null" >
        file_type,
      </if>
      <if test="status != null" >
        `status`,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fileName != null" >
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null" >
        #{fileSize,jdbcType=BIGINT},
      </if>
      <if test="url != null" >
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null" >
        #{fileType,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.vivolvle.producer.model.Resource" >
    update `resource`
    <set >
      <if test="fileName != null" >
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="fileSize != null" >
        file_size = #{fileSize,jdbcType=BIGINT},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="fileType != null" >
        file_type = #{fileType,jdbcType=TINYINT},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.vivolvle.producer.model.Resource" >
    update `resource`
    set file_name = #{fileName,jdbcType=VARCHAR},
      file_size = #{fileSize,jdbcType=BIGINT},
      url = #{url,jdbcType=VARCHAR},
      file_type = #{fileType,jdbcType=TINYINT},
      `status` = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>